//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/InputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputControls"",
    ""maps"": [
        {
            ""name"": ""Controls0"",
            ""id"": ""52d7178a-af54-476a-9304-52a154e47e5c"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""dd82fe66-a089-48dc-b5eb-9313cef80339"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""1a6cbacf-ece7-4f31-9a2f-97ba26440778"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2qwe"",
                    ""id"": ""2b1957d3-38f1-422e-894c-3fbcc7199b1c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d58b8e82-1fc1-4166-87fb-01aedf41af3b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""57f3d8e1-ed4c-49f9-9b7c-58c7bb56c9cf"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""24d23299-a66a-47de-84d5-ac8942f066db"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2c72d4aa-4bbd-47ba-be38-608294dadb89"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""55b9c078-028f-4fc9-b6cb-1a4efb5c87e5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Controls1"",
            ""id"": ""fd5b1d12-1279-4a03-8b6e-05464d1ffe5c"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3d3f0f04-9656-4660-b2eb-388e73784a09"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""68f4b3a8-76c9-48e8-8d54-91cb5eb6ee73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""rdfg"",
                    ""id"": ""e1cf431c-164e-4f84-bc06-ff765794fc0c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0a5923f6-b4fa-4cd4-aa90-c1acbc905fc1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""429ddcb1-e2d9-4b66-bc20-76e7dca57988"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4dd24862-6bad-4a7c-b866-d3e86111ff0a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""09d318fa-fc3f-4787-ad45-3c3bb8ced984"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c85458dc-b6b5-4bda-886d-ffa2a6bd4f74"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Controls2"",
            ""id"": ""0d08f24b-972d-4c7d-8b65-2a0d88b48a9e"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""2fc39fe3-7af6-4f2b-90b4-9cd454e92880"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""ac5470a3-a3d3-4a92-8eee-4d7b01253da0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""6tyu"",
                    ""id"": ""abd61b4e-d3db-4f82-a7ba-63b50280ff89"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2f0c6301-e438-4679-9e43-8a620bd8b94f"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e80ab3db-5729-48d9-918a-2536c1315407"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""72b13d31-29dd-475d-9242-2171d28eb16a"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""99b1d8a7-4a6a-4fbe-af9a-3f3228611f38"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1c4c1502-754e-4ae5-9773-0128c7e0ec2a"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Controls3"",
            ""id"": ""9ac69d47-2e93-47a4-ab21-36944c2d8a1e"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""406db5b7-87be-4eb9-8292-ffd9e02811c6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""b6875777-a348-4b39-8755-c5bdedb05cf7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""jnm,"",
                    ""id"": ""3ef26c61-8aa0-479a-8413-cc5404995fcf"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a7351be7-a544-42b0-95c9-11d780be9de9"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1912f76f-0c9c-4620-99ca-a6cb956f3851"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bd0302ac-3a7b-42c9-a987-5335f9ecae23"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5e74b4be-4ddd-4110-9765-92bc522d187a"",
                    ""path"": ""<Keyboard>/comma"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8536c949-bf34-4e49-895a-48cd6a6aab25"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Controls4"",
            ""id"": ""3609cb42-7075-454c-8cf4-25373734d90b"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c90db363-835b-4bbe-a617-7139517bb8a4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""e8d879eb-481b-4447-bee8-37d09e56996c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""okl;"",
                    ""id"": ""8b6b21d7-7413-4b68-8409-457a2552da73"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""321fad1d-36ee-44bd-ada5-181de7ff099d"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""40d7652a-fd3a-420a-8255-6df17544530d"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b64bb8a8-096c-471b-87b0-a6d536886c44"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fc660431-f687-4aa7-832a-5ec4ce5764ad"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""abbe5cd9-846f-4342-9cf9-976864d7f860"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Controls5"",
            ""id"": ""5a8b6f5a-e2b9-4211-a938-be8bf399a91b"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""9dae5391-9e2b-4ac3-8984-1c5309013da5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""c5fcec79-2766-4412-96fd-af40b255882f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""-p[]"",
                    ""id"": ""ff94f330-b51e-48b7-8178-791e7795c2f9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3b3ffe5b-1983-45f1-9e8c-f2694db84ad2"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ce194687-ace8-45df-8382-2ece89912e20"",
                    ""path"": ""<Keyboard>/leftBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e2cfd200-459e-4f06-a6d9-6a54072d302c"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d04740a0-c504-44ad-8066-a956773b6b2d"",
                    ""path"": ""<Keyboard>/rightBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""25ad9b47-8e61-48d3-96bb-a378ec1ed41f"",
                    ""path"": ""<Keyboard>/quote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Controls6"",
            ""id"": ""f856632a-d8ff-4ddb-a2eb-f5fcf9947530"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""7231d2dc-85a0-43bf-a947-0507df1903a9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""7fa8be9a-8110-4ed2-8788-2fe6d37783cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""/789"",
                    ""id"": ""e0ccc192-2651-42ba-8575-47e45006cef2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a62b993a-c40a-4c17-bf2a-8c1176fa9cca"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3d2ffbe0-7c79-4831-9754-994fc115ae43"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""42c4dd3e-d76d-4d24-b26f-57ae8bd033e2"",
                    ""path"": ""<Keyboard>/numpad7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e400fc7a-41a8-46bd-bb7f-40c10ad58861"",
                    ""path"": ""<Keyboard>/numpad9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bf299a5b-833f-450e-afda-164ae114a05e"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Controls7"",
            ""id"": ""5df05632-4e26-4821-ac85-2bafef946ef5"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""af5b1675-6050-434e-9e98-599748206c90"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""9d400384-1b9e-4765-87dc-2ef3a2be8211"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""5123"",
                    ""id"": ""dd55e961-7257-4545-a722-43aaf9514f57"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c8047757-d453-4890-b646-ad71125ba879"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""73920a3c-4c87-40b4-aace-0ae94b4cc252"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""16c61b6e-9dcf-4072-b84b-b35a7e021cfb"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""817941be-ad87-46ed-a116-d7898c28ed1f"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""552904b0-06c0-4c80-b0bf-5ef2e01f762b"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Controls0
        m_Controls0 = asset.FindActionMap("Controls0", throwIfNotFound: true);
        m_Controls0_Movement = m_Controls0.FindAction("Movement", throwIfNotFound: true);
        m_Controls0_Shoot = m_Controls0.FindAction("Shoot", throwIfNotFound: true);
        // Controls1
        m_Controls1 = asset.FindActionMap("Controls1", throwIfNotFound: true);
        m_Controls1_Movement = m_Controls1.FindAction("Movement", throwIfNotFound: true);
        m_Controls1_Shoot = m_Controls1.FindAction("Shoot", throwIfNotFound: true);
        // Controls2
        m_Controls2 = asset.FindActionMap("Controls2", throwIfNotFound: true);
        m_Controls2_Movement = m_Controls2.FindAction("Movement", throwIfNotFound: true);
        m_Controls2_Shoot = m_Controls2.FindAction("Shoot", throwIfNotFound: true);
        // Controls3
        m_Controls3 = asset.FindActionMap("Controls3", throwIfNotFound: true);
        m_Controls3_Movement = m_Controls3.FindAction("Movement", throwIfNotFound: true);
        m_Controls3_Shoot = m_Controls3.FindAction("Shoot", throwIfNotFound: true);
        // Controls4
        m_Controls4 = asset.FindActionMap("Controls4", throwIfNotFound: true);
        m_Controls4_Movement = m_Controls4.FindAction("Movement", throwIfNotFound: true);
        m_Controls4_Shoot = m_Controls4.FindAction("Shoot", throwIfNotFound: true);
        // Controls5
        m_Controls5 = asset.FindActionMap("Controls5", throwIfNotFound: true);
        m_Controls5_Movement = m_Controls5.FindAction("Movement", throwIfNotFound: true);
        m_Controls5_Shoot = m_Controls5.FindAction("Shoot", throwIfNotFound: true);
        // Controls6
        m_Controls6 = asset.FindActionMap("Controls6", throwIfNotFound: true);
        m_Controls6_Movement = m_Controls6.FindAction("Movement", throwIfNotFound: true);
        m_Controls6_Shoot = m_Controls6.FindAction("Shoot", throwIfNotFound: true);
        // Controls7
        m_Controls7 = asset.FindActionMap("Controls7", throwIfNotFound: true);
        m_Controls7_Movement = m_Controls7.FindAction("Movement", throwIfNotFound: true);
        m_Controls7_Shoot = m_Controls7.FindAction("Shoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controls0
    private readonly InputActionMap m_Controls0;
    private IControls0Actions m_Controls0ActionsCallbackInterface;
    private readonly InputAction m_Controls0_Movement;
    private readonly InputAction m_Controls0_Shoot;
    public struct Controls0Actions
    {
        private @InputControls m_Wrapper;
        public Controls0Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Controls0_Movement;
        public InputAction @Shoot => m_Wrapper.m_Controls0_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Controls0; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Controls0Actions set) { return set.Get(); }
        public void SetCallbacks(IControls0Actions instance)
        {
            if (m_Wrapper.m_Controls0ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Controls0ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Controls0ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Controls0ActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_Controls0ActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_Controls0ActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_Controls0ActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_Controls0ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public Controls0Actions @Controls0 => new Controls0Actions(this);

    // Controls1
    private readonly InputActionMap m_Controls1;
    private IControls1Actions m_Controls1ActionsCallbackInterface;
    private readonly InputAction m_Controls1_Movement;
    private readonly InputAction m_Controls1_Shoot;
    public struct Controls1Actions
    {
        private @InputControls m_Wrapper;
        public Controls1Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Controls1_Movement;
        public InputAction @Shoot => m_Wrapper.m_Controls1_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Controls1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Controls1Actions set) { return set.Get(); }
        public void SetCallbacks(IControls1Actions instance)
        {
            if (m_Wrapper.m_Controls1ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Controls1ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Controls1ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Controls1ActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_Controls1ActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_Controls1ActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_Controls1ActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_Controls1ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public Controls1Actions @Controls1 => new Controls1Actions(this);

    // Controls2
    private readonly InputActionMap m_Controls2;
    private IControls2Actions m_Controls2ActionsCallbackInterface;
    private readonly InputAction m_Controls2_Movement;
    private readonly InputAction m_Controls2_Shoot;
    public struct Controls2Actions
    {
        private @InputControls m_Wrapper;
        public Controls2Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Controls2_Movement;
        public InputAction @Shoot => m_Wrapper.m_Controls2_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Controls2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Controls2Actions set) { return set.Get(); }
        public void SetCallbacks(IControls2Actions instance)
        {
            if (m_Wrapper.m_Controls2ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Controls2ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Controls2ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Controls2ActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_Controls2ActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_Controls2ActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_Controls2ActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_Controls2ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public Controls2Actions @Controls2 => new Controls2Actions(this);

    // Controls3
    private readonly InputActionMap m_Controls3;
    private IControls3Actions m_Controls3ActionsCallbackInterface;
    private readonly InputAction m_Controls3_Movement;
    private readonly InputAction m_Controls3_Shoot;
    public struct Controls3Actions
    {
        private @InputControls m_Wrapper;
        public Controls3Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Controls3_Movement;
        public InputAction @Shoot => m_Wrapper.m_Controls3_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Controls3; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Controls3Actions set) { return set.Get(); }
        public void SetCallbacks(IControls3Actions instance)
        {
            if (m_Wrapper.m_Controls3ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Controls3ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Controls3ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Controls3ActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_Controls3ActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_Controls3ActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_Controls3ActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_Controls3ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public Controls3Actions @Controls3 => new Controls3Actions(this);

    // Controls4
    private readonly InputActionMap m_Controls4;
    private IControls4Actions m_Controls4ActionsCallbackInterface;
    private readonly InputAction m_Controls4_Movement;
    private readonly InputAction m_Controls4_Shoot;
    public struct Controls4Actions
    {
        private @InputControls m_Wrapper;
        public Controls4Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Controls4_Movement;
        public InputAction @Shoot => m_Wrapper.m_Controls4_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Controls4; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Controls4Actions set) { return set.Get(); }
        public void SetCallbacks(IControls4Actions instance)
        {
            if (m_Wrapper.m_Controls4ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Controls4ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Controls4ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Controls4ActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_Controls4ActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_Controls4ActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_Controls4ActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_Controls4ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public Controls4Actions @Controls4 => new Controls4Actions(this);

    // Controls5
    private readonly InputActionMap m_Controls5;
    private IControls5Actions m_Controls5ActionsCallbackInterface;
    private readonly InputAction m_Controls5_Movement;
    private readonly InputAction m_Controls5_Shoot;
    public struct Controls5Actions
    {
        private @InputControls m_Wrapper;
        public Controls5Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Controls5_Movement;
        public InputAction @Shoot => m_Wrapper.m_Controls5_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Controls5; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Controls5Actions set) { return set.Get(); }
        public void SetCallbacks(IControls5Actions instance)
        {
            if (m_Wrapper.m_Controls5ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Controls5ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Controls5ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Controls5ActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_Controls5ActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_Controls5ActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_Controls5ActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_Controls5ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public Controls5Actions @Controls5 => new Controls5Actions(this);

    // Controls6
    private readonly InputActionMap m_Controls6;
    private IControls6Actions m_Controls6ActionsCallbackInterface;
    private readonly InputAction m_Controls6_Movement;
    private readonly InputAction m_Controls6_Shoot;
    public struct Controls6Actions
    {
        private @InputControls m_Wrapper;
        public Controls6Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Controls6_Movement;
        public InputAction @Shoot => m_Wrapper.m_Controls6_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Controls6; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Controls6Actions set) { return set.Get(); }
        public void SetCallbacks(IControls6Actions instance)
        {
            if (m_Wrapper.m_Controls6ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Controls6ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Controls6ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Controls6ActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_Controls6ActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_Controls6ActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_Controls6ActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_Controls6ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public Controls6Actions @Controls6 => new Controls6Actions(this);

    // Controls7
    private readonly InputActionMap m_Controls7;
    private IControls7Actions m_Controls7ActionsCallbackInterface;
    private readonly InputAction m_Controls7_Movement;
    private readonly InputAction m_Controls7_Shoot;
    public struct Controls7Actions
    {
        private @InputControls m_Wrapper;
        public Controls7Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Controls7_Movement;
        public InputAction @Shoot => m_Wrapper.m_Controls7_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Controls7; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Controls7Actions set) { return set.Get(); }
        public void SetCallbacks(IControls7Actions instance)
        {
            if (m_Wrapper.m_Controls7ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Controls7ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Controls7ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Controls7ActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_Controls7ActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_Controls7ActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_Controls7ActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_Controls7ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public Controls7Actions @Controls7 => new Controls7Actions(this);
    public interface IControls0Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IControls1Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IControls2Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IControls3Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IControls4Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IControls5Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IControls6Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
    public interface IControls7Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
